<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Hermit</title>
    <link>https://forever-crazy.github.io/</link>
    <description>Recent content on Hugo Hermit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 17:00:18 +0800</lastBuildDate>
    
	<atom:link href="https://forever-crazy.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Week-3 Linux内核编译</title>
      <link>https://forever-crazy.github.io/posts/week-3/</link>
      <pubDate>Sat, 18 Apr 2020 17:00:18 +0800</pubDate>
      
      <guid>https://forever-crazy.github.io/posts/week-3/</guid>
      <description>1.解压内核源码文件  在Linux官网下载内核源代码，在这里可以找到所有的内核版本，我下载的是4.4.218版本。我是先在Windows上下载好后通过虚拟机共享文件夹传到虚拟机中(传过来的共享文件会在/mnt/hgfs目录下)。 进入虚拟机中，将下载的内核压缩文件复制到/home 或其他比较空闲的目录中，然后进入压缩文件所在子目录，分两步解压缩： （1）xz -d linux-4.4.218.tar.xz，大概执行 1 分钟左右，中间没有任何信息显示。 （2）tar –xvf linux-4.4.218.tar 注意：由于编译过程中会生成很多临时文件，所以要确保压缩文件所在子目录有足够的空闲空间，最好能有 15-20GB，我在建立虚拟机时预留了 40GB 磁盘空间。  2.清除残留的.config和.o文件  在开始完全重新编译之前，需要删除所有的编译生成文件(.o文件)、内核配置文件(.config文件)和各种备份文件。后续如果编译过程中出现错误，再次开始完全重新编译之前也需要如此清理。进入 linux-4.4.218 目录， 执行以下命令： #make mrproper 这里可能会提醒安装 ncurses 包，在 Ubuntu 中 ncurses 库的名字是 libncurses5-dev，所以安装命令是： #apt-get install libncurses5-dev 安装完缺少的包之后再次执行命令： #make mrproper  3.配置内核  执行命令： #make menuconfig 运行该命令过程中，可能会出现错误信息： fatal error: curses.h: No such file or directory。 执行命令安装套件 ncurses devel： #apt-get install libncurses5-dev 在之后出现的对话框中选择 save，再 exit 退出。  4.编译内核  执行命令(可使用 make -j4 (4核CPU)来加快编译速度)： #make -j4 内核配置完成后，执行 make 命令开始编译内核，如果编译成功，则生成 Linux 启动映像文件 bzImage(位于.</description>
    </item>
    
    <item>
      <title>Week-2 一些基础的numpy笔记</title>
      <link>https://forever-crazy.github.io/posts/week-2-%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 09 Apr 2020 21:16:17 +0800</pubDate>
      
      <guid>https://forever-crazy.github.io/posts/week-2-%E7%AC%94%E8%AE%B0/</guid>
      <description>import numpy as np #访问数组元素 x = np.arange(100).reshape(10, 10) y = x[[1, 2, 3]] z = x[[1, 2, 3, 4], [3, 2, 1, 5]] # y:[[10 11 12 13 14 15 16 17 18 19] # [20 21 22 23 24 25 26 27 28 29] # [30 31 32 33 34 35 36 37 38 39]] # z:[13 22 31 45] #随机函数 a = np.random.randn(2, 3) #生成指定维度的标准正态分布(以0为均值,1为标准差)的数据 b = np.</description>
    </item>
    
    <item>
      <title>Week-1 mnist手写数字识别</title>
      <link>https://forever-crazy.github.io/posts/week-1/</link>
      <pubDate>Sun, 05 Apr 2020 10:42:49 +0800</pubDate>
      
      <guid>https://forever-crazy.github.io/posts/week-1/</guid>
      <description>实现了一个简单的mnist手写数字识别的3层神经网络，没什么技术含量。
在这里采用了正态分布来初始化权重值，使用sigmoid函数当激活函数。
import scipy.special import pandas as pd import numpy as np class NeutralNetwork(): def __init__(self,inputnumber, hidenumber, outnumber, learningrate): self.inum = inputnumber self.hnum = hidenumber self.onum = outnumber self.lr = learningrate # np.random.normal(loc=0.0, scale=1.0, size=None) loc-均值, scale-标准差, size-输出数组的维度 self.inputweight = np.random.normal(0.0, pow(self.hnum, -0.5), (self.hnum, self.inum)) self.hideweight = np.random.normal(0.0, pow(self.onum, -0.5), (self.onum, self.hnum)) self.activation_function = lambda x : scipy.special.expit(x) # sigmoid函数 def train(self, inputlist, outputlist): inlist = np.array(inputlist).reshape(-1, 1) oulist = np.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://forever-crazy.github.io/about-hugo/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://forever-crazy.github.io/about-hugo/</guid>
      <description>菜鸡一枚，现就读于杭州一不知名高校，计算机专业。
性格内向，不喜欢热闹，在生人面前比较腼腆，在熟人面前会放飞自我。
平常喜欢打LOL，偶尔玩csgo，但水平实在让人不敢恭维（好歹也玩了这么多年，还这么菜qwq
喜欢看宫崎骏的电影，其中最喜欢《龙猫》和《魔女宅急便》，每次看时自己都会沉浸到那个淳朴美好的世界中，压抑的心情好了不少。
进大学这么久了，感觉啥都没学到，啥都不会，白白荒废了这么久的时间，终于下定决心好好学习（希望不是真香233&amp;hellip;</description>
    </item>
    
    <item>
      <title>Week-0 从零开始</title>
      <link>https://forever-crazy.github.io/posts/week-0/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://forever-crazy.github.io/posts/week-0/</guid>
      <description>​ 其实很早就有写博客的想法，但到真正下笔时却总是被我以各种理由开脱，理由也不外乎两个：一是总觉得自己水平太低，脑子里没货，实在想不出写什么；二是碍于贫乏的词汇量和表达能力，我总是无法准确清楚地表达出自己的想法和理解。(好吧，或许还是因为我太懒qwq
​ 就这样，磨蹭了很久，直到今天终于下定决心开始写博客，去养成一个好的习惯，也不管写什么，反正只要能写出东西就可以。当然咯，我毕竟还太菜，写出来的东西水平或许还太低，不过没关系，从零开始，每次写一点点，每次进步一点点，量变终究会引起质变。
Come on!!!</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://forever-crazy.github.io/posts/getting-started-with-hugo/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://forever-crazy.github.io/posts/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>